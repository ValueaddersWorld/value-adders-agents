[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=agents",
    "--cov=integrations",
    "--cov=tools",
    "--cov=outputs",
    "--cov=automation",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "requires_api: Tests that require API keys",
]

[tool.coverage.run]
source = ["agents", "integrations", "tools", "outputs", "automation"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py",
    "*_test.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 100
target-version = ["py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.venv
  | \.env
  | __pycache__
  | build
  | dist
  | outputs
  | pathlog_data
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = [
    "*/outputs/*",
    "*/pathlog_data/*",
    "*/__pycache__/*",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "autogen_agentchat.*",
    "autogen_ext.*",
    "notion_client.*",
]
ignore_missing_imports = true

[tool.pylint.main]
py-version = "3.11"
ignore = ["outputs", "pathlog_data", "__pycache__", ".venv", ".env"]
jobs = 0

[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access (for testing)
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "ts"]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*", "integrations*", "tools*", "outputs*", "automation*"]
exclude = ["tests*", "pathlog*", "pathlog_data*", "*.egg-info"]

[project]
name = "value-adders-agents"
version = "0.1.0"
description = "Autonomous multi-agent orchestration for Value Adders World"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    {name = "Value Adders World", email = "contact@valueaddersworld.com"}
]
keywords = ["ai", "agents", "autogen", "orchestration", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "python-dotenv>=1.0.0",
    "autogen-agentchat>=0.4.0.dev6",
    "autogen-ext>=0.4.0.dev6",
    "notion-client>=2.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "pylint>=3.0.0",
    "mypy>=1.8.0",
    "flake8>=7.0.0",
    "bandit>=1.7.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/ValueaddersWorld/value-adders-agents"
Documentation = "https://github.com/ValueaddersWorld/value-adders-agents#readme"
Repository = "https://github.com/ValueaddersWorld/value-adders-agents"
Issues = "https://github.com/ValueaddersWorld/value-adders-agents/issues"

[project.scripts]
value-adders-sprint = "orchestration_auto_demo:main"
